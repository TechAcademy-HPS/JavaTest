#!/usr/bin/env groovy

@Library('shared-library@master') _ //master or whatever branch

pipeline{
	
        tools {
        maven "maven3.6.3"
    }
	agent any
	
         stages{

              stage('maven build'){
                  steps{
                      script{
			         sh "echo $USER"
		    	         build('Install')
                      	  }
               	     }  
                 }	
             stage(S_Sonar_Report){
                 steps{
                        withSonarQubeEnv('SonarQubeSrvr'){
                          script{
                          sonarQube.sonarAnalysis('DemoWebapp','http://52.66.242.152:9000','squ_2ba2a1f2195375dd9c1a73c097033a1ed94109d7')
                   }
               }
           }
       }
	/* stage('S_NexusArtifactUploader'){
            steps{
                script {
                      nexus.nexus(
                      'demo',
                      '',
                      'target/demo-2.0.0-SNAPSHOT.war',
                      'war',
                      'nexuscredentials',
                      'com.domain',
                      '18.181.241.2:8081',
                      'nexus3',
                      'http',
                      'demo',
                      '2.0.0-SNAPSHOT')
                }
            }
		}*/
      /* stage('Deploy'){
             steps{
		    sshagent(['tomcat']) {
                   sh "scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/Demo/target/*.war ec2-user@54.178.117.30:/opt/tomcat9/webapps/" 
                  }
              }
        } */	 
      stage('Ansible'){
            
        steps{
		  script {
			    ansible.ansible_deploy_playbook('hosts.inv','DeploySharedLibrary.yml')
		  }             		    
            }
        }
            
		
           }	
	
}
