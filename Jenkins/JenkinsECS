def buildno = BUILD_NUMBER
def readpom

pipeline {
    agent any
    tools {
        maven "maven3.6.3"
    }
	
    stages {
      	
         stage('Build'){
             steps{
		    sh "mvn clean package"
	              }
        } 
	   
	
	stage('Building image') {
            steps{
                script {
		          readpom = readMavenPom file: 'pom.xml';
                          def pomversion = readpom.version;
			  sh "docker build -t yoshithadocker/mydockerrepo:${buildno} ."
                     }
                  }
              }
	      
	 stage('push to repo') {
            steps{
                script {
		         readpom = readMavenPom file: 'pom.xml';
                         def pomversion = readpom.version;
			// sh "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/g7r5s0z3"
			//  sh "docker push public.ecr.aws/g7r5s0z3/expressappcontainer:${pomversion}"
			
			withCredentials([usernamePassword(credentialsId: 'dockercredentials', passwordVariable: 'dockerpassword', usernameVariable: '')]) {
			         sh 'docker login -u yoshithadocker -p ${dockerpassword}'
                                 sh "docker push yoshithadocker/mydockerrepo:${buildno}"
                          }
                  }
              }
          }
	  
	 stage('helm') {
            steps{
                     sh "helm upgrade ui helm-charts/ --set image.tag=14"
                  }
              }
	
        /*stage('K8S Deploy') {
             steps{   
              script {
	            readpom = readMavenPom file: 'pom.xml';
                    def pomversion = readpom.version;
                    withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kubeconfig', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                    sh ('kubectl apply -f  eks-deploy-k8s.yaml')
		     sh "kubectl set image deployment/springboot-app my-springboot-app=public.ecr.aws/g7r5s0z3/expressappcontainer:${pomversion}"
                           }
             }
            }
        }*/

     }

}
