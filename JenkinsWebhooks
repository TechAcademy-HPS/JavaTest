pipeline {
agent any
   //properties([pipelineTriggers([<object of type org.jenkinsci.plugins.ghprb.GhprbTrigger>])])
   // properties([pipelineTriggers([<object of type org.jenkinsci.plugins.ghprb.GhprbTrigger>])])
  //properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([githubPush()])])
  tools {
        maven "maven3.6.3"
    }
    stages {
        stage('Initialize') {
            steps{
		      /* script{
		     // properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([githubPush()])])
		     }*/
		               //sh "mvn clean package"
			       gitAutomerger releaseBranchPattern: 'release/1.0'
                    //git branch: *, url: 'https://github.com/TechAcademy-HPS/JavaTest.git'
	              }
                 
            }
	    
	/*stage('sonar') {
            steps {
		    script {
                       withSonarQubeEnv('SonarQube') {
                       sh "mvn sonar:sonar"
                      }
		      timeout(time: 1, unit: 'HOURS') {
                      def qg = waitForQualityGate()
                      if (qg.status != 'OK') {
                           error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                    }
                 }
	      }
           }*/
        }
}


